worker_processes auto;

events {
  worker_connections  1024;
}

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  types_hash_max_size 2048;
  server_tokens off;

  # maximum file upload size
  # update upload_max_filesize & post_max_size in /etc/php5/fpm/php.ini accordingly
  client_max_body_size 32m;
  # client_body_timeout 60s; # increase for very long file uploads
  include       mime.types;
  default_type  application/octet-stream;

  server {
    listen 80 default_server;
    server_name  _;

    index index.html index.php;

    root /var/www/html;

    location / {
      try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
      fastcgi_pass    php-fpm-svc:9000;
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      fastcgi_index   index.php;
      include         fastcgi_params;
      include         fastcgi.conf;
    }

  ## Begin - Checks
    # php health checks
    location ~ ^/(status|ping)$ {
      set $log_quiet = 1
      fastcgi_pass php-fpm-svc:9000;
      include fastcgi_params;
      #and don't serve from document_root
      fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;
    }

    #used for checking static file serving
    location /robots.txt {
      set $log_quiet = $arg_quiet
    }

    # nginx status page
    location /proxy_status {
      stub_status on;
    }
  ## End - Checks

  ## Begin - Logging
    # quiet logging if quiet==true && status==ok
    # request /status?quiet=1 will request quiet logging
    # set $log_quiet = $arg_quiet; or set $log_quiet = 1 in a location
    map $status $log_ok {
      ~^[23]  0;
      default 1;
    }
    #log_off = log_quiet && log_ok
    map $log_quiet $log_off {
      1       0+$log_ok;
      default 1;
    }

    log_format json escape=json
      '{'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"bytes_sent":"$bytes_sent",'
        '"http_host":"$http_host",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"msec":"$msec",'
        '"log_off":"$log_off",'
        '"log_ok":"$log_ok",'
        '"log_quiet":"$log_quiet",'
        '"remote_addr":"$remote_addr",'
        '"request_method":"$request_method",'
        '"request_time":"$request_time",'
        '"status": "$status",'
        '"time_local":"$time_local",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_connect_time":"$upstreamconnecttime",'
        '"upstream_response_time":"$upstream_response_time"'
      '}';
    access_log /var/log/nginx/access.log json buffer=64k flush=5s;

  ## End - Logging

  ## Begin - Security
    # deny all direct access for these folders
    location ~* /(.git|cache|bin|logs|backups|tests)/.*$ { return 403; }
    # deny running scripts inside core system folders
    location ~* /(system|vendor)/.*\.(txt|xml|md|html|yaml|php|pl|py|cgi|twig|sh|bat)$ { return 403; }
    # deny running scripts inside user folder
    location ~* /user/.*\.(txt|md|yaml|php|pl|py|cgi|twig|sh|bat)$ { return 403; }
    # deny access to specific files in the root folder
    location ~ /(LICENSE.txt|composer.lock|composer.json|nginx.conf|web.config|htaccess.txt|\.htaccess) { return 403; }

    # disable content type sniffing for more security
    add_header "X-Content-Type-Options" "nosniff";

    # force the latest IE version
    add_header "X-UA-Compatible" "IE=Edge";

    # enable anti-cross-site scripting filter built into IE 8+
    add_header "X-XSS-Protection" "1; mode=block";
  ## End - Security
  }
}
